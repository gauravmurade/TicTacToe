function initializeTableDeck(){for(var a=[],b=1,c=0;52>c;c++){var d=(c+1)%13==0?13:(c+1)%13,e="",f=CardSuite.d;switch(f=1==b?CardSuite.c:2==b?CardSuite.d:3==b?CardSuite.h:CardSuite.s,d){case 11:e="J";break;case 12:e="Q";break;case 13:e="K";break;case 1:e="A";break;default:e=d.toString()}a.push(new Card(e,f)),13==d&&b++}return a}function distributeCards(a){for(var b=0;2>b;b++)for(var c=0;c<a.playerList.length;c++)a.playerList[c].cards.push(a.deck.pop());burnCard(a.deck);for(var b=0;3>b;b++)a.closedCards.push(a.deck.pop());burnCard(a.deck),a.closedCards.push(a.deck.pop()),burnCard(a.deck),a.closedCards.push(a.deck.pop())}function burnCard(a){a.pop()}function printCardDeck(a){for(var b=0;b<a.length;b++)console.log(a[b].cardNumber+" of "+CardSuite[a[b].cardType])}function isGameOver(a){return 0==a.playerList.length||1==a.playerList.length}var CardSuite;!function(a){a[a.c=0]="c",a[a.d=1]="d",a[a.h=2]="h",a[a.s=3]="s"}(CardSuite||(CardSuite={}));var winningScoreAndCards=function(){function a(){}return a}(),Card=function(){function a(a,b){this.cardNumber=a,this.cardType=b}return a}(),PlayerState;!function(a){a[a.Check=0]="Check",a[a.Call=1]="Call",a[a.Raise=2]="Raise",a[a.Fold=3]="Fold",a[a.Init=4]="Init",a[a.AllIn=5]="AllIn",a[a.Small=6]="Small",a[a.Big=7]="Big"}(PlayerState||(PlayerState={}));var Player=function(){function a(a,b){this.id=a,this.name=b,this.state=PlayerState.Init,this.cards=[],this.chipsInPocket=300,this.currentBet=0}return a.prototype.resetCurrentBet=function(){this.currentBet=0},a.prototype.convertPlayerCardArrayToString=function(){for(var a="",b=0;b<this.cards.length;b++)a=a+this.cards[b].cardNumber+CardSuite[this.cards[b].cardType]+" ";return console.log("Hand Cards: "+a),a},a}(),Pot=function(){function a(){this.currentPotBetAmount=0,this.totalAmount=0,this.hands=["4 of a Kind","Straight Flush","Straight","Flush","High Card","1 Pair","2 Pair","Royal Flush","3 of a Kind","Full House","-Invalid-"],this.handRanks=[8,9,5,6,1,2,3,10,4,7,0],this.playersInvolved=[],this.playersContributions=[]}return a.prototype.addAmountToPot=function(a){this.totalAmount=this.totalAmount+a},a.prototype.subtractAmountFromThePot=function(a){this.totalAmount=this.totalAmount-a},a.prototype.addPlayerToThePot=function(a){this.playersInvolved.push(a),this.playersContributions.push(0)},a.prototype.addAllPlayersToThePot=function(a){for(var b=0;b<a.length;b++)this.playersInvolved.push(a[b]),this.playersContributions.push(0)},a.prototype.addContribution=function(a,b){for(var c=0;c<this.playersInvolved.length;c++)this.playersInvolved[c]==a&&(this.playersContributions[c]+=b)},a.prototype.subtractContribution=function(a,b){for(var c=0;c<this.playersInvolved.length;c++)this.playersInvolved[c]==a&&(this.playersContributions[c]-=b)},a.prototype.checkContribution=function(a){for(var b=0;b<this.playersInvolved.length;b++)if(this.playersInvolved[b]==a)return this.playersContributions[b]},a.prototype.removeIfPlayerPresent=function(a){for(var b=0;b<this.playersInvolved.length;b++)this.playersInvolved[b]==a&&(this.playersInvolved.splice(b,1),this.playersContributions.splice(b,1))},a.prototype.getWinners=function(a){for(var b,c,d=a.convertTableCardArrayToString(),e=-1,f=[],g=0;g<this.playersInvolved.length;g++){console.log("\n"),console.log("Player "+g+": "),c=gameLogic.rankHand(this.playersInvolved[g].convertPlayerCardArrayToString()+d);var h=this.handRanks[c.index];h>e?(e=h,f=[],f.push(this.playersInvolved[g]),b=[],b.push(c.wci)):h==e&&(f.push(this.playersInvolved[g]),b.push(c.wci))}return console.log("\n\n\n"),console.log("No. Of Winners: "+f.length),console.log("Winners: "),console.log(f),console.log("\n\n\n"),f.length>1&&(f=gameLogic.resolveEqualHandsConflict(a.openedCards,f,b,this.hands[this.handRanks.indexOf(e)])),f},a}(),TableSetup=function(){function a(a){this.playerList=[],this.deck=[],this.openedCards=[],this.closedCards=[],this.dealerIndex=4,this.currentPlayerIndex=0,this.roundStartIndex=0,this.potArray=[];var b=new Pot;this.potArray.push(b),this.smallBlind=10,this.bigBlind=20,this.currentCallAmount=0,this.playerIndicesRemovedInThisHand=[]}return a.prototype.addPlayerToTheTable=function(a){this.playerList.push(a)},a.prototype.incrementCurrentPlayerIndex=function(){for(;;){if(this.currentPlayerIndex++,this.currentPlayerIndex%=this.playerList.length,(this.currentPlayerIndex+1)%this.playerList.length==this.roundStartIndex&&this.playerList[this.currentPlayerIndex].state!=PlayerState.Init)return gameLogic.adjustPots(this),void gameLogic.roundOver(this);if(this.playerList[this.currentPlayerIndex].state!=PlayerState.Fold&&this.playerList[this.currentPlayerIndex].state!=PlayerState.AllIn)return}},a.prototype.incrementRoundStartIndex=function(){this.roundStartIndex++,this.roundStartIndex%=this.playerList.length},a.prototype.incrementCurrentAndRoundStartIndices=function(){this.currentPlayerIndex++,this.currentPlayerIndex%=this.playerList.length,this.roundStartIndex++,this.roundStartIndex%=this.playerList.length},a.prototype.getCurrentPotIndex=function(){return this.potArray.length-1},a.prototype.addNewPot=function(a,b){var c=new Pot;c.addAmountToPot(a),c.addAllPlayersToThePot(b),this.potArray.push(c)},a.prototype.getCumulativePotAmount=function(){for(var a=0,b=0;b<this.potArray.length;b++)a+=this.potArray[b].totalAmount;return a},a.prototype.verifyAndAdjustPots=function(){for(var a=this.potArray[this.potArray.length-1],b=0;b<a.playersInvolved.length;b++);},a.prototype.awardWinners=function(){for(var a=0;a<this.potArray.length;a++){console.log("Pot Number: "+a);var b=this.potArray[a].getWinners(this);console.log("\nFinal Winning Players:"),console.log(b),console.log("\n");for(var c=b.length,d=this.potArray[a].totalAmount/c,e=0;e<b.length;e++)b[e].chipsInPocket+=d}},a.prototype.resetRound=function(){for(var a=0;a<this.playerList.length;a++)this.playerList[a].currentBet=0,this.playerList[a].state!==PlayerState.Fold&&this.playerList[a].state!==PlayerState.AllIn&&(this.playerList[a].state=PlayerState.Init);for(this.currentPlayerIndex=(this.dealerIndex+1)%this.playerList.length;;){if(this.roundStartIndex=this.currentPlayerIndex,this.currentCallAmount=0,this.currentPlayerIndex==this.dealerIndex&&(this.playerList[this.currentPlayerIndex].state==PlayerState.Fold||this.playerList[this.currentPlayerIndex].state==PlayerState.Fold))return gameLogic.adjustPots(this),void gameLogic.roundOver(this);if(this.playerList[this.currentPlayerIndex].state!=PlayerState.Fold&&this.playerList[this.currentPlayerIndex].state!=PlayerState.AllIn)break;this.currentPlayerIndex=(this.currentPlayerIndex+1)%this.playerList.length}},a.prototype.resetHand=function(){for(var a=0,b=0;b<this.playerIndicesRemovedInThisHand.length;b++)this.playerIndicesRemovedInThisHand[b]<=this.dealerIndex&&a++;var c=this.dealerIndex-a;0>c?this.dealerIndex=c+this.playerList.length:this.dealerIndex=c,this.dealerIndex=(this.dealerIndex+1)%this.playerList.length,this.roundStartIndex=(this.dealerIndex+1)%this.playerList.length,this.currentPlayerIndex=this.roundStartIndex,this.currentCallAmount=0,this.potArray=[];var d=new Pot;d.addAllPlayersToThePot(this.playerList),this.potArray.push(d),this.openedCards=[],this.closedCards=[];for(var b=0;b<this.playerList.length;b++)this.playerList[b].currentBet=0,this.playerList[b].cards=[],this.playerList[b].state=PlayerState.Init;this.deck=initializeTableDeck(),distributeCards(this)},a.prototype.removePlayersWithInsufficientChips=function(){for(var a=0;a<this.playerList.length;a++)this.playerList[a].chipsInPocket<this.bigBlind&&this.playerIndicesRemovedInThisHand.push(a);for(var a=0;a<this.playerList.length;a++)this.playerList[a].chipsInPocket<this.bigBlind&&(this.playerList.splice(a,1),a--)},a.prototype.getActivePlayersCount=function(){for(var a=0,b=0;b<this.playerList.length;b++)a++;return a},a.prototype.convertTableCardArrayToString=function(){for(var a="",b=0;b<this.openedCards.length;b++)a=a+this.openedCards[b].cardNumber+CardSuite[this.openedCards[b].cardType]+" ";return console.log("\nTable Cards: "+a.substring(0,a.length-1)),a.substring(0,a.length-1)},a}(),gameLogic;!function(a){function b(){var a=new TableSetup(x);return a.addPlayerToTheTable(new Player("adit91","Adit")),a.addPlayerToTheTable(new Player("ridhi91","Ridhi")),a.addPlayerToTheTable(new Player("anto90","Anto")),a.addPlayerToTheTable(new Player("gaurav89","Gaurav")),a.addPlayerToTheTable(new Player("rachita88","Rachita")),a.potArray[a.getCurrentPotIndex()].addAllPlayersToThePot(a.playerList),a.deck=initializeTableDeck(),distributeCards(a),console.log(a),a}function c(){return{table:b(),delta:null}}function d(a,b,d,g){a||(a=c());var h=!1,i=!1,j=a.table;if(isGameOver(j))throw new Error("Can only make a move if the game is not over! Number of required payers for the game not satisfied");var k=angular.copy(j);b=k.playerList[k.currentPlayerIndex];switch(0==k.openedCards.length&&(k.currentPlayerIndex==(k.dealerIndex+1)%k.playerList.length&&b.state==PlayerState.Init?(k.potArray[k.getCurrentPotIndex()].addAmountToPot(k.smallBlind),b.chipsInPocket-=k.smallBlind,b.currentBet=k.smallBlind,k.currentCallAmount=k.smallBlind,k.potArray[k.getCurrentPotIndex()].addContribution(b,k.smallBlind),k.potArray[k.getCurrentPotIndex()].currentPotBetAmount=k.smallBlind):k.currentPlayerIndex==(k.dealerIndex+2)%k.playerList.length&&b.state==PlayerState.Init&&(k.potArray[k.getCurrentPotIndex()].addAmountToPot(k.bigBlind),b.chipsInPocket-=k.bigBlind,b.currentBet=k.bigBlind,k.currentCallAmount=k.bigBlind,k.potArray[k.getCurrentPotIndex()].addContribution(b,k.bigBlind),k.potArray[k.getCurrentPotIndex()].currentPotBetAmount=k.bigBlind)),b.state){case PlayerState.Fold:for(var l=0,m=void 0,n=0;n<k.playerList.length;n++)k.playerList[n].state==PlayerState.Fold?l++:m=k.playerList[n];if(l==k.playerList.length-1){console.log("Turn Start: "),console.log("Player: "+k.currentPlayerIndex),console.log("Action: "+PlayerState[b.state]),console.log("Pot After the Turn: "),console.log(k.potArray),console.log(k.playerList),console.log("\n");var o=k.getCumulativePotAmount();m.chipsInPocket+=o,k.removePlayersWithInsufficientChips(),k.resetHand(),i=!0,h=!0,0!=k.playerList.length&&1!=k.playerList.length||console.log("Game Over! Bye Bye! "+k.playerList.length+" Players left!");var p,q=k.currentPlayerIndex,r={currentPlayer:b,amountAdded:d},s={delta:r,table:k};return p=null,{endMatchScores:p,turnIndexAfterMove:q,stateAfterMove:s}}for(var n=0;n<k.potArray.length;n++)k.potArray[n].removeIfPlayerPresent(b);break;case PlayerState.AllIn:if(0==b.chipsInPocket){console.log("Turn Start: "),console.log("Player: "+k.currentPlayerIndex),console.log("Action: "+PlayerState[b.state]),console.log("Pot After the Turn: "),console.log(k.potArray),console.log(k.playerList),console.log("\n");var t,u=k.currentPlayerIndex,v={currentPlayer:b,amountAdded:d},w={delta:v,table:k};return t=null,{endMatchScores:t,turnIndexAfterMove:u,stateAfterMove:w}}var x=b.currentBet+b.chipsInPocket;if(x>=k.currentCallAmount){console.log("No New Pot Created:");for(var y=b.chipsInPocket,n=0;n<k.potArray.length;n++){var z=k.potArray[n].checkContribution(b);if(z<k.potArray[n].currentPotBetAmount){var A=k.potArray[n].currentPotBetAmount-z;y-=A,k.potArray[n].addAmountToPot(A),k.potArray[n].addContribution(b,A)}}k.potArray[k.getCurrentPotIndex()].addAmountToPot(y),k.potArray[k.getCurrentPotIndex()].addContribution(b,y),b.chipsInPocket=0,b.currentBet=x,x>k.currentCallAmount&&(k.roundStartIndex=k.currentPlayerIndex),k.currentCallAmount=x,k.potArray[k.getCurrentPotIndex()].currentPotBetAmount+=y}else if(x<k.currentCallAmount){console.log("New Pot Created:");for(var B=0,C=0,D=void 0,n=0;n<k.potArray.length;n++){if(B+=k.potArray[n].currentPotBetAmount,x==B){k.potArray[n].addAmountToPot(b.chipsInPocket),k.potArray[n].addContribution(b,b.chipsInPocket),b.chipsInPocket=0,b.currentBet=x;for(var E=n+1;E<k.potArray.length;E++)k.potArray[E].removeIfPlayerPresent(b);D=1;break}if(B>x){D=2,C=n;break}}if(1==D)break;for(var y=b.chipsInPocket,n=0;C>n;n++){var z=k.potArray[n].checkContribution(b);if(z<k.potArray[n].currentPotBetAmount){var F=k.potArray[n].currentPotBetAmount-z;y-=F,k.potArray[n].addAmountToPot(F),k.potArray[n].addContribution(b,F)}}for(var G=new Pot,H=[],n=0;n<k.potArray[C].playersInvolved.length;n++)k.potArray[C].playersInvolved[n]!=b&&H.push(k.potArray[C].playersInvolved[n]);G.addAllPlayersToThePot(H),G.currentPotBetAmount=k.potArray[C].currentPotBetAmount-y;for(var I=k.potArray[C].playersInvolved,J=k.potArray[C].playersContributions,A=0,K=0,L=[],M=[],n=0;n<I.length;n++)J[n]>y&&(A=J[n]-y,k.potArray[C].subtractContribution(I[n],A),K+=A,L.push(I[n]),M.push(A));k.potArray[C].addAmountToPot(y),k.potArray[C].addContribution(b,y),k.potArray[C].currentPotBetAmount=y,k.potArray[C].subtractAmountFromThePot(K),G.addAmountToPot(K);for(var n=0;n<L.length;n++)G.addContribution(L[n],M[n]);k.potArray.splice(C+1,0,G),b.chipsInPocket=0,b.currentBet=x}break;case PlayerState.Check:if(k.currentCallAmount>b.currentBet)throw new Error("Can't check. The player has not matched the current table bet amount");break;case PlayerState.Call:var N=k.currentCallAmount-b.currentBet;if(0==N)throw new Error("The player has already matched the current table bet amount");if(N>b.chipsInPocket)throw new Error("The player doesn't have enough chips to match the current table bet amount. He can go All In");for(var n=0;n<k.potArray.length;n++){var z=k.potArray[n].checkContribution(b);if(z<k.potArray[n].currentPotBetAmount){var A=k.potArray[n].currentPotBetAmount-z;k.potArray[n].addAmountToPot(A),k.potArray[n].addContribution(b,A)}}b.chipsInPocket-=N,b.currentBet=k.currentCallAmount;break;case PlayerState.Raise:var N=k.currentCallAmount-b.currentBet,O=d,P=N+O;if(P>b.chipsInPocket)throw new Error("The player doesn't have enough chips to raise the bet. Choose a smaller amount.");for(var y=P,n=0;n<k.potArray.length;n++){var z=k.potArray[n].checkContribution(b);if(z<k.potArray[n].currentPotBetAmount){var A=k.potArray[n].currentPotBetAmount-z;y-=A,k.potArray[n].addAmountToPot(A),k.potArray[n].addContribution(b,A)}}k.potArray[k.getCurrentPotIndex()].addAmountToPot(y),k.potArray[k.getCurrentPotIndex()].addContribution(b,y),b.chipsInPocket-=P,b.currentBet=b.currentBet+P,k.currentCallAmount=b.currentBet,k.roundStartIndex=k.currentPlayerIndex,k.potArray[k.getCurrentPotIndex()].currentPotBetAmount+=y}console.log("Turn Start: "),console.log("Player: "+k.currentPlayerIndex),console.log("Action: "+PlayerState[b.state]);var Q,R=isGameOver(k);(k.currentPlayerIndex+1)%k.playerList.length==k.roundStartIndex&&b.state!=PlayerState.Init&&(f(k),e(k),h=!0,5==k.openedCards.length&&(i=!0)),R?Q=-1:(0!=k.openedCards.length||0!=i||b.state!=PlayerState.Init||k.currentPlayerIndex!=(k.dealerIndex+1)%k.playerList.length&&k.currentPlayerIndex!=(k.dealerIndex+2)%k.playerList.length?0==h&&k.incrementCurrentPlayerIndex():k.incrementCurrentAndRoundStartIndices(),Q=k.currentPlayerIndex),console.log("Pot After the Turn: "),console.log(k.potArray),console.log(k.playerList),console.log("\n");var S,T={currentPlayer:b,amountAdded:d},U={delta:T,table:k};return S=null,{endMatchScores:S,turnIndexAfterMove:Q,stateAfterMove:U}}function e(a){switch(a.openedCards.length){case 0:for(var b=0;3>b;b++)a.openedCards.push(a.closedCards.pop());console.log("1st Round Over! 3 Cards Open"),a.verifyAndAdjustPots(),a.resetRound();break;case 3:a.openedCards.push(a.closedCards.pop()),console.log("2nd Round Over! 1 Card Open"),a.resetRound();break;case 4:a.openedCards.push(a.closedCards.pop()),console.log("3rd Round Over! 1 Card Open"),a.resetRound();break;case 5:a.awardWinners(),console.log("\nHand Over"),a.removePlayersWithInsufficientChips(),a.resetHand(),0!=a.playerList.length&&1!=a.playerList.length||console.log("Game Over! Bye Bye! "+a.playerList.length+" Players left!")}}function f(a){for(var b=a.potArray.length-1;b<a.potArray.length;b++){var c=a.potArray[b],d=c.playersContributions[0],e=[];e.push(c.playersInvolved[0]);for(var f=0;f<c.playersInvolved.length;f++)c.playersInvolved[f].state==PlayerState.AllIn&&c.playersContributions[f]<c.currentPotBetAmount&&(c.playersContributions[f]<d?(d=c.playersContributions[f],e=[],e.push(c.playersInvolved[f])):c.playersContributions[f]==d&&e.push(c.playersInvolved[f]));if(d<c.currentPotBetAmount){for(var g=new Pot,h=[],f=0;f<c.playersInvolved.length;f++){for(var i=!1,j=0;j<e.length;j++)if(c.playersInvolved[f]==e[j]){i=!0;break}0==i&&h.push(c.playersInvolved[f])}var k=d;g.addAllPlayersToThePot(h),g.currentPotBetAmount=c.currentPotBetAmount-k;for(var l=c.playersInvolved,m=c.playersContributions,n=0,o=0,p=[],q=[],f=0;f<l.length;f++)m[f]>k&&(n=m[f]-k,c.subtractContribution(l[f],n),o+=n,p.push(l[f]),q.push(n));c.currentPotBetAmount=k,c.subtractAmountFromThePot(o),g.addAmountToPot(o);for(var f=0;f<p.length;f++)g.addContribution(p[f],q[f]);a.potArray.push(g)}}}function g(a){var b=a.turnIndexBeforeMove,c=a.stateBeforeMove,e=a.move,f=a.move.stateAfterMove.delta,g=f.currentPlayer,h=f.amountAdded,i=d(c,g,h,b);if(!angular.equals(e,i))throw new Error("Expected move="+angular.toJson(i,!0)+", but got stateTransition="+angular.toJson(a,!0))}function h(a){var b,c=10,d=[],e=a.replace(/A/g,"14").replace(/K/g,"13").replace(/Q/g,"12").replace(/J/g,"11").replace(/s|c|h|d/g,","),f=e.replace(/\s/g,"").slice(0,-1).split(",").map(Number).filter(Boolean),g=a.match(/s|c|h|d/g),h=[];for(b=0;b<g.length;b++)"s"===g[b]?h[b]=1:"c"===g[b]?h[b]=8:"h"===g[b]?h[b]=32:"d"===g[b]&&(h[b]=64);if(null!==f&&null!=h){if(f.length==h.length){var l=void 0,m={},n=0,o=void 0;for(b=0;b<f.length;b++)l=f[b]+g[b],m[l]=1;for(o in m)m.hasOwnProperty(o)&&n++;if(f.length>=5&&f.length==h.length&&f.length==n){var p=j(5,f.length),q=0,r=10;for(b=0;b<p.length;b++){var s=[f[p[b][0]],f[p[b][1]],f[p[b][2]],f[p[b][3]],f[p[b][4]]],t=[h[p[b][0]],h[p[b][1]],h[p[b][2]],h[p[b][3]],h[p[b][4]]];if(c=k(s,t),w[c]>q)q=w[c],r=c,d=p[b].slice();else if(w[c]==q){var u=i(s),x=i([f[d[0]],f[d[1]],f[d[2]],f[d[3]],f[d[4]]]);u>x&&(d=p[b].slice())}}console.log("Final Winning hand: "),console.log(d),c=r}}console.log("Hand: "+w[c]),console.log("Hand Name: "+v[c]);var y=new winningScoreAndCards;return y.index=c,y.wci=d,y}}function i(a){var b,c=a.slice(),d=[];for(b=0;5>b;b++)d[c[b]]=d[c[b]]>=1?d[c[b]]+1:1;return c.sort(function(a,b){return d[a]<d[b]?1:d[a]>d[b]?-1:b-a}),c[0]<<16|c[1]<<12|c[2]<<8|c[3]<<4|c[4]}function j(a,b){function c(a,b,c){var d;if(0===a.length){for(d=0;b>d;++d)a[d]=d;return!0}for(d=b-1,++a[d];d>0&&a[d]>=c-b+1+d;)--d,++a[d];if(a[0]>c-b)return!1;for(d+=1;b>d;++d)a[d]=a[d-1]+1;return!0}for(var d=[],e=[];c(e,a,b);)d.push(e.slice());return d}function k(a,b){var c,d,e,f;for(d=-1,c=e=0;5>d;d++,e=Math.pow(2,4*a[d]))c+=e*((c/e&15)+1);return 5!=(c%=15)?c-1:(f=1<<a[0]|1<<a[1]|1<<a[2]|1<<a[3]|1<<a[4],c-=f/(f&-f)==31||16444==f?3:1,b[0]==(b[0]|b[1]|b[2]|b[3]|b[4])?c-(31744==f?-5:1):c)}function l(a,b,c,d){console.log("Conflict Type : "+d);for(var e=[],f=[],g=0;g<b.length;g++){e[g]=[];for(var h=0;h<c[g].length;h++)c[g][h]<2?e[g].push(b[g].cards[c[g][h]]):e[g].push(a[c[g][h]-2])}switch(d){case"4 of a Kind":return m(a,b,c,d,e,f);case"3 of a Kind":return n(a,b,c,d,e,f);case"1 Pair":return o(a,b,c,d,e,f);case"Straight Flush":return p(a,b,c,d,e,f);case"Straight":return p(a,b,c,d,e,f);case"Flush":return q(a,b,c,d,e,f);case"High Card":return q(a,b,c,d,e,f);case"Full House":return n(a,b,c,d,e,f);case"Royal Flush":return b;case"2 Pair":return r(a,b,c,d,e,f);case"-Invalid-":return}}function m(a,b,c,d,e,f){for(var g=0,h=0,i=0;i<b.length;i++){for(var j=1,k=0,l="",m=0;m<e[i].length-1;m++){for(var n=m+1;n<e[i].length;n++)e[i][m].cardNumber==e[i][n].cardNumber&&j++;if(l=e[i][m].cardNumber,4==j)break;j=1}j=0;for(var m=0;m<e[i].length;m++){j=1;for(var n=0;n<e[i].length;n++)e[i][m].cardNumber==e[i][n].cardNumber&&m!=n&&j++;1==j&&s(e[i][m].cardNumber)>k&&(k=s(e[i][m].cardNumber))}var o=s(l);o>g?(g=o,h=k,f=[],f.push(b[i])):o==g&&k>h?(h=k,f=[],f.push(b[i])):o==g&&k==h&&f.push(b[i])}return f}function n(a,b,c,d,e,f){for(var g=0,h=0,i=0,j=0;j<b.length;j++){for(var k=1,l=0,m=0,n="",o=0;o<e[j].length-1;o++){for(var p=o+1;p<e[j].length;p++)e[j][o].cardNumber==e[j][p].cardNumber&&k++;if(n=e[j][o].cardNumber,3==k)break;k=1}k=0;for(var o=0;o<e[j].length;o++){k=1;for(var p=0;p<e[j].length;p++)e[j][o].cardNumber==e[j][p].cardNumber&&o!=p&&k++;3!=k&&s(e[j][o].cardNumber)>l?(m=l,l=s(e[j][o].cardNumber)):3!=k&&s(e[j][o].cardNumber)>l&&(m=s(e[j][o].cardNumber))}var q=s(n);console.log("3 Of A Kind: "+q+" ; Kicker: "+l),q>g?(g=q,i=l,m=l,f=[],f.push(b[j])):q==g&&l>i?(i=l,h=m,f=[],f.push(b[j])):q==g&&l==i&&m>h?(h=m,f=[],f.push(b[j])):q==g&&l==i&&m==h&&f.push(b[j])}return f}function o(a,b,c,d,e,f){for(var g=0,h=0,i=0,j=0,k=0;k<b.length;k++){for(var l=1,m="",n=0;n<e[k].length-1;n++){for(var o=n+1;o<e[k].length;o++)e[k][n].cardNumber==e[k][o].cardNumber&&l++;if(m=e[k][n].cardNumber,2==l)break;l=1}for(var p=0,q=0,r=0,t=s(m),n=0;n<e[k].length;n++){var u=s(e[k][n].cardNumber);u!=t&&(u>p?(r=q,q=p,p=u):u>q?(r=q,q=u):u>r&&(r=u))}t>g?(g=t,h=p,i=q,j=r,f=[],f.push(b[k])):t==g&&p>h?(h=p,i=q,j=r,f=[],f.push(b[k])):t==g&&p==h&&q>i?(i=q,j=r,f=[],f.push(b[k])):t==g&&p==h&&q==i&&r>j?(j=r,f=[],f.push(b[k])):t==g&&p==h&&q==i&&r==j&&f.push(b[k])}return f}function p(a,b,c,d,e,f){for(var g=0,h=0;h<b.length;h++){for(var i=0,j=0;j<e[h].length;j++){var k=s(e[h][j].cardNumber);k>i&&(i=k)}i>g?(g=i,f=[],f.push(b[h])):i==g&&f.push(b[h])}return f}function q(a,b,c,d,e,f){for(var g=[],h=0;h<e.length;h++)e[h].sort(t);for(var h=0;5>h;h++){for(var i=0,j=0;j<b.length;j++)s(e[j][h].cardNumber)>i?(i=s(e[j][h].cardNumber),f=[],f.push(b[j]),g=[],g.push(e[j])):s(e[j][h].cardNumber)==i&&(f.push(b[j]),g.push(e[j]));if(1==f.length||4==h)return f;b=f,e=g,f=[]}return f}function r(a,b,c,d,e,f){for(var g=0,h=0,i=0,j=0;j<b.length;j++){for(var k=1,l=0,m=0,n=0,o=0;o<e[j].length-1;o++){for(var p=o+1;p<e[j].length;p++)e[j][o].cardNumber==e[j][p].cardNumber&&k++;if(2==k){var q=s(e[j][o].cardNumber);q>l?(m=l,l=q):q>m&&(m=q)}else k=1}k=1;for(var o=0;o<e[j].length;o++){k=1;for(var p=0;p<e[j].length;p++)e[j][o].cardNumber==e[j][p].cardNumber&&o!=p&&k++;if(1==k){n=s(e[j][o].cardNumber);break}}l>g?(g=l,h=m,i=n,f=[],f.push(b[j])):l==g&&m>h?(h=m,i=n,f=[],f.push(b[j])):l==g&&m==h&&n>i?(i=n,f=[],f.push(b[j])):l==g&&m==h&&n==i&&f.push(b[j])}return f}function s(a){switch(a){case"J":return 11;case"Q":return 12;case"K":return 13;case"A":return 14;default:return Number(a)}}function t(a,b){return s(a.cardNumber)>s(b.cardNumber)?-1:s(a.cardNumber)<s(b.cardNumber)?1:0}function u(){var b=a.createMove(null,null,0,0);b.stateAfterMove.table.playerList[4].chipsInPocket=80,b.stateAfterMove.table.playerList[2].chipsInPocket=40,b.stateAfterMove.table.playerList[3].chipsInPocket=60,b=a.createMove(b.stateAfterMove,null,0,b.turnIndexAfterMove),b.stateAfterMove.table.playerList[2].state=PlayerState.AllIn,b=a.createMove(b.stateAfterMove,null,0,b.turnIndexAfterMove),b.stateAfterMove.table.playerList[3].state=PlayerState.AllIn,b=a.createMove(b.stateAfterMove,null,0,b.turnIndexAfterMove),b.stateAfterMove.table.playerList[4].state=PlayerState.AllIn,b=a.createMove(b.stateAfterMove,null,0,b.turnIndexAfterMove),b.stateAfterMove.table.playerList[0].state=PlayerState.Fold,b=a.createMove(b.stateAfterMove,null,0,b.turnIndexAfterMove),b.stateAfterMove.table.playerList[1].state=PlayerState.Call,b=a.createMove(b.stateAfterMove,null,0,b.turnIndexAfterMove),b.stateAfterMove.table.playerList[1].state=PlayerState.Check,b=a.createMove(b.stateAfterMove,null,0,b.turnIndexAfterMove),b.stateAfterMove.table.playerList[1].state=PlayerState.Check,b=a.createMove(b.stateAfterMove,null,0,b.turnIndexAfterMove),b.stateAfterMove.table.playerList[1].state=PlayerState.Check,b=a.createMove(b.stateAfterMove,null,0,b.turnIndexAfterMove)}var v=["4 of a Kind","Straight Flush","Straight","Flush","High Card","1 Pair","2 Pair","Royal Flush","3 of a Kind","Full House","-Invalid-"],w=[8,9,5,6,1,2,3,10,4,7,0],x=5;a.getInitialTable=b,a.getInitialState=c,a.createMove=d,a.roundOver=e,a.adjustPots=f,a.checkMoveOk=g,a.rankHand=h,a.getPokerScore=i,a.getCombinations=j,a.resolveEqualHandsConflict=l,a.resolve_4_OfAKind=m,a.resolve_3_OfAKind=n,a.resolve_2_OfAKind=o,a.findHighestCard=p,a.resolveHighestCard=q,a.resolve2Pairs=r,a.getCardIntegerValue=s,a.sortNumber=t,a.forSimpleTestHtml=u}(gameLogic||(gameLogic={}));var game;!function(a){function b(){translate.setTranslations(c()),translate.setLanguage("en"),log.log("Translation of 'RULES_OF_TICTACTOE' is "+translate("RULES_OF_TICTACTOE")),resizeGameAreaService.setWidthToHeight(1),moveService.setGame({minNumberOfPlayers:5,maxNumberOfPlayers:5,checkMoveOk:gameLogic.checkMoveOk,updateUI:f}),document.addEventListener("animationend",d,!1),document.addEventListener("webkitAnimationEnd",d,!1),document.addEventListener("oanimationend",d,!1),setTimeout(d,1e3);var a=window;a.HTMLInspector&&setInterval(function(){a.HTMLInspector.inspect({excludeRules:["unused-classes","script-placement"]})},3e3)}function c(){return{RULES_OF_TICTACTOE:{en:"Rules of TicTacToe",iw:"חוקי המשחק"},RULES_SLIDE1:{en:"You and your opponent take turns to mark the grid in an empty spot. The first mark is X, then O, then X, then O, etc.",iw:"אתה והיריב מסמנים איקס או עיגול כל תור"},RULES_SLIDE2:{en:"The first to mark a whole row, column or diagonal wins.",iw:"הראשון שמסמן שורה, עמודה או אלכסון מנצח"},CLOSE:{en:"Close",iw:"סגור"}}}function d(){a.animationEnded||$rootScope.$apply(function(){log.info("Animation ended"),a.animationEnded=!0,e()})}function e(){!a.isComputerTurn}function f(b){log.info("Game got updateUI:",b),a.animationEnded=!1,a.move=b.move,a.state=a.move.stateAfterMove,a.state||(console.log("Calling updateUI"),a.state=gameLogic.getInitialState()),console.log(b,a.state),a.canMakeMove=a.move.turnIndexAfterMove>=0&&b.yourPlayerIndex===a.move.turnIndexAfterMove,console.log("canMakeMove: "+a.canMakeMove+" params.yourPlayerIndex: "+b.yourPlayerIndex+"move.turnIndexAfterMove: "+a.move.turnIndexAfterMove+" \nSTATE:"),console.log(a.state),b.yourPlayerIndex>=0&&3!==a.state.table.playerList[b.yourPlayerIndex].state&&(a.temp_yourPlayerIndex=b.yourPlayerIndex,o=a.state.table.playerList[b.yourPlayerIndex].cards[0],p=a.state.table.playerList[b.yourPlayerIndex].cards[1],a.class_yourPlayerCards_card1=k(o),a.class_yourPlayerCards_card2=k(p),console.log("cardsClass YPI"+a.class_yourPlayerCards_card1+" "+a.class_yourPlayerCards_card2)),a.isComputerTurn=a.canMakeMove&&""===b.playersInfo[b.yourPlayerIndex].playerId,a.isComputerTurn&&(a.canMakeMove=!1,a.state.delta||e()),console.log("state at end of updateUI",a.state)}function g(b,c){if(log.info("Clicked on button:",b," amountRaised: ",c),"?throwException"===window.location.search)throw new Error("Throwing the error because URL has '?throwException'");if(!a.canMakeMove)return void console.log(" cannot make move, "+a.move.turnIndexAfterMove+" should play");try{console.log("cellClicked STATE BEFORE MAKE MOVE: ",a.state),a.state.table.playerList[a.temp_yourPlayerIndex].state=h(b),console.log("Move Before call :",a.move);var d=gameLogic.createMove(a.state,null,c,a.move.turnIndexAfterMove);a.canMakeMove=!1,moveService.makeMove(d),console.log("cellClicked STATE AFTER MAKE MOVE: "),console.log(a.state)}catch(e){return log.info("Illegal Move",b),void console.log(e)}}function h(a){switch(a){case"Raise":return PlayerState.Raise;case"Fold":return PlayerState.Fold;case"Call":return PlayerState.Call;case"AllIn":return PlayerState.AllIn;case"Check":return PlayerState.Check;case"Small":return PlayerState.Init;case"Big":return PlayerState.Init;default:throw new Error("getPlayerStateBasedOnAction: Illegal PlayertState")}}function i(b){var c=PlayerState[a.state.table.playerList[b].state];return c}function j(){var b=document.getElementById("raiseAmount").value;""===b&&(b="0"),a.cellClicked("Raise",+b)}function k(a){var b="card";return b+=" "+l(a)+" "+m(a)}function l(a){switch(a.cardType){case 0:return"clubs";case 1:return"diamonds";case 2:return"hearts";case 3:return"spades";default:return" "}}function m(a){switch(a.cardNumber){case"K":return"rank13";case"Q":return"rank12";case"J":return"rank11";case"10":return"rank10";case"9":return"rank9";case"8":return"rank8";case"7":return"rank7";case"6":return"rank6";case"5":return"rank5";case"4":return"rank4";case"3":return"rank3";case"2":return"rank2";case"A":return"rank1";default:return" "}}function n(b){return b.target===b.currentTarget&&(b.preventDefault(),b.stopPropagation(),a.isHelpModalShown=!1),!0}a.animationEnded=!1,a.canMakeMove=!1,a.isComputerTurn=!1,a.move=null,a.state=null,a.isHelpModalShown=!1;var o,p;a.init=b,a.cellClicked=g,a.getPlayerStateBasedOnAction=h,a.getPlayerStateByIndex=i,a.raised=j,a.getCardClass=k,a.getCardSuite=l,a.getCardRank=m,a.clickedOnModal=n}(game||(game={})),angular.module("myApp",["ngTouch","ui.bootstrap","gameServices"]).run(function(){$rootScope.game=game,game.init()});var aiService;!function(a){function b(a){return d(a,{millisecondsLimit:1e3})}function c(a,b){for(var c=[],d=0;d<gameLogic.ROWS;d++)for(var e=0;e<gameLogic.COLS;e++)try{c.push(gameLogic.createMove(a,d,e,b))}catch(f){}return c}function d(a,b){return alphaBetaService.alphaBetaDecision(a,a.turnIndexAfterMove,f,e,null,b)}function e(a,b){var c=a.endMatchScores;return c?c[0]>c[1]?Number.POSITIVE_INFINITY:c[0]<c[1]?Number.NEGATIVE_INFINITY:0:0}function f(a,b){return c(a.stateAfterMove,b)}a.findComputerMove=b,a.getPossibleMoves=c,a.createComputerMove=d}(aiService||(aiService={}));
//# sourceMappingURL=everything.min.js.map