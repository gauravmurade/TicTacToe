function initializeTableDeck(){for(var a=[],b=1,c=0;52>c;c++){var d=(c+1)%13==0?13:(c+1)%13,e="",f=CardSuite.d;switch(f=1==b?CardSuite.c:2==b?CardSuite.d:3==b?CardSuite.h:CardSuite.s,d){case 11:e="J";break;case 12:e="Q";break;case 13:e="K";break;case 1:e="A";break;default:e=d.toString()}a.push(new Card(e,f)),13==d&&b++}return a}function distributeCards(a){for(var b=0;2>b;b++)for(var c=0;c<a.playerList.length;c++)a.playerList[c].cards.push(a.deck.pop());burnCard(a.deck);for(var b=0;3>b;b++)a.closedCards.push(a.deck.pop());burnCard(a.deck),a.closedCards.push(a.deck.pop()),burnCard(a.deck),a.closedCards.push(a.deck.pop())}function burnCard(a){a.pop()}function printCardDeck(a){for(var b=0;b<a.length;b++);}var CardSuite;!function(a){a[a.c=0]="c",a[a.d=1]="d",a[a.h=2]="h",a[a.s=3]="s"}(CardSuite||(CardSuite={}));var winningScoreAndCards=function(){function a(){}return a}(),Card=function(){function a(a,b){this.cardNumber=a,this.cardType=b}return a}(),PlayerState;!function(a){a[a.Check=0]="Check",a[a.Call=1]="Call",a[a.Raise=2]="Raise",a[a.Fold=3]="Fold",a[a.Init=4]="Init",a[a.AllIn=5]="AllIn",a[a.Small=6]="Small",a[a.Big=7]="Big"}(PlayerState||(PlayerState={}));var Player=function(){function a(a,b){this.currentBet=0,this.id=a,this.name=b,this.state=PlayerState.Init,this.cards=[],this.chipsInPocket=300,this.currentBet=0}return a.prototype.resetCurrentBet=function(){this.currentBet=0},a.prototype.convertPlayerCardArrayToString=function(){for(var a="",b=0;b<this.cards.length;b++)a=a+this.cards[b].cardNumber+CardSuite[this.cards[b].cardType]+" ";return a},a}(),Pot=function(){function a(){this.currentPotBetAmount=0,this.totalAmount=0,this.hands=["4 of a Kind","Straight Flush","Straight","Flush","High Card","1 Pair","2 Pair","Royal Flush","3 of a Kind","Full House","-Invalid-"],this.handRanks=[8,9,5,6,1,2,3,10,4,7,0],this.playersInvolved=[],this.playersContributions=[]}return a.prototype.addAmountToPot=function(a){this.totalAmount=this.totalAmount+a},a.prototype.subtractAmountFromThePot=function(a){this.totalAmount=this.totalAmount-a},a.prototype.addPlayerToThePot=function(a){this.playersInvolved.push(a),this.playersContributions.push(0)},a.prototype.addAllPlayersToThePot=function(a){for(var b=0;b<a.length;b++)this.playersInvolved.push(a[b]),this.playersContributions.push(0)},a.prototype.addContribution=function(a,b){for(var c=0;c<this.playersInvolved.length;c++)this.playersInvolved[c]==a&&(this.playersContributions[c]+=b)},a.prototype.subtractContribution=function(a,b){for(var c=0;c<this.playersInvolved.length;c++)this.playersInvolved[c]==a&&(this.playersContributions[c]-=b)},a.prototype.checkContribution=function(a){for(var b=0;b<this.playersInvolved.length;b++)if(this.playersInvolved[b]==a)return this.playersContributions[b]},a.prototype.removeIfPlayerPresent=function(a){for(var b=0;b<this.playersInvolved.length;b++)this.playersInvolved[b]==a&&(this.playersInvolved.splice(b,1),this.playersContributions.splice(b,1))},a.prototype.getWinners=function(a){for(var b,c,d=a.convertTableCardArrayToString(),e=-1,f=[],g=0;g<this.playersInvolved.length;g++){c=gameLogic.rankHand(this.playersInvolved[g].convertPlayerCardArrayToString()+d);var h=this.handRanks[c.index];h>e?(e=h,f=[],f.push(this.playersInvolved[g]),b=[],b.push(c.wci)):h==e&&(f.push(this.playersInvolved[g]),b.push(c.wci))}return f.length>1&&(f=gameLogic.resolveEqualHandsConflict(a.openedCards,f,b,this.hands[this.handRanks.indexOf(e)])),f},a}(),TableSetup=function(){function a(a){this.playerList=[],this.deck=[],this.openedCards=[],this.closedCards=[],this.dealerIndex=a-1,this.currentPlayerIndex=0,this.roundStartIndex=0,this.potArray=[];var b=new Pot;this.potArray.push(b),this.smallBlind=10,this.bigBlind=20,this.currentCallAmount=0,this.playerIndicesRemovedInThisHand=[]}return a.prototype.addPlayerToTheTable=function(a){this.playerList.push(a)},a.prototype.incrementCurrentPlayerIndex=function(){for(;;){if(this.currentPlayerIndex++,this.currentPlayerIndex%=this.playerList.length,(this.currentPlayerIndex+1)%this.playerList.length==this.roundStartIndex&&this.playerList[this.currentPlayerIndex].state!=PlayerState.Init)return gameLogic.adjustPots(this),void gameLogic.roundOver(this);if(this.playerList[this.currentPlayerIndex].state!=PlayerState.Fold&&this.playerList[this.currentPlayerIndex].state!=PlayerState.AllIn)return}},a.prototype.incrementRoundStartIndex=function(){this.roundStartIndex++,this.roundStartIndex%=this.playerList.length},a.prototype.incrementCurrentAndRoundStartIndices=function(){this.currentPlayerIndex++,this.currentPlayerIndex%=this.playerList.length,this.roundStartIndex++,this.roundStartIndex%=this.playerList.length},a.prototype.getCurrentPotIndex=function(){return this.potArray.length-1},a.prototype.addNewPot=function(a,b){var c=new Pot;c.addAmountToPot(a),c.addAllPlayersToThePot(b),this.potArray.push(c)},a.prototype.getCumulativePotAmount=function(){for(var a=0,b=0;b<this.potArray.length;b++)a+=this.potArray[b].totalAmount;return a},a.prototype.verifyAndAdjustPots=function(){for(var a=this.potArray[this.potArray.length-1],b=0;b<a.playersInvolved.length;b++);},a.prototype.awardWinners=function(){for(var a=0;a<this.potArray.length;a++){for(var b=this.potArray[a].getWinners(this),c=b.length,d=this.potArray[a].totalAmount/c,e=0;e<b.length;e++)b[e].chipsInPocket+=d;return angular.copy(b)}},a.prototype.resetRound=function(){for(var a=0;a<this.playerList.length;a++)this.playerList[a].currentBet=0,this.playerList[a].state!==PlayerState.Fold&&this.playerList[a].state!==PlayerState.AllIn&&(this.playerList[a].state=PlayerState.Init);for(this.currentPlayerIndex=(this.dealerIndex+1)%this.playerList.length;;){if(this.roundStartIndex=this.currentPlayerIndex,this.currentCallAmount=0,this.currentPlayerIndex==this.dealerIndex&&(this.playerList[this.currentPlayerIndex].state==PlayerState.Fold||this.playerList[this.currentPlayerIndex].state==PlayerState.Fold))return gameLogic.adjustPots(this),void gameLogic.roundOver(this);if(this.playerList[this.currentPlayerIndex].state!=PlayerState.Fold&&this.playerList[this.currentPlayerIndex].state!=PlayerState.AllIn)break;this.currentPlayerIndex=(this.currentPlayerIndex+1)%this.playerList.length}},a.prototype.resetHand=function(){for(var a=0,b=0;b<this.playerIndicesRemovedInThisHand.length;b++)this.playerIndicesRemovedInThisHand[b]<=this.dealerIndex&&a++;var c=this.dealerIndex-a;0>c?this.dealerIndex=c+this.playerList.length:this.dealerIndex=c,this.dealerIndex=(this.dealerIndex+1)%this.playerList.length,this.roundStartIndex=(this.dealerIndex+1)%this.playerList.length,this.currentPlayerIndex=this.roundStartIndex,this.currentCallAmount=0,this.potArray=[];var d=new Pot;d.addAllPlayersToThePot(this.playerList),this.potArray.push(d),this.openedCards=[],this.closedCards=[],this.winners=[];for(var b=0;b<this.playerList.length;b++)this.playerList[b].currentBet=0,this.playerList[b].cards=[],this.playerList[b].state=PlayerState.Init;this.deck=initializeTableDeck(),distributeCards(this)},a.prototype.removePlayersWithInsufficientChips=function(){for(var a=0;a<this.playerList.length;a++)this.playerList[a].chipsInPocket<this.bigBlind&&this.playerIndicesRemovedInThisHand.push(a);for(var a=0;a<this.playerList.length;a++)this.playerList[a].chipsInPocket<this.bigBlind&&(this.playerList.splice(a,1),a--)},a.prototype.getActivePlayersCount=function(){for(var a=0,b=0;b<this.playerList.length;b++)a++;return a},a.prototype.convertTableCardArrayToString=function(){for(var a="",b=0;b<this.openedCards.length;b++)a=a+this.openedCards[b].cardNumber+CardSuite[this.openedCards[b].cardType]+" ";return a.substring(0,a.length-1)},a}(),gameLogic;!function(a){function b(a){return 0==a.playerList.length||1==a.playerList.length}function c(a){for(var b=new TableSetup(a.length),c=0;c<a.length;c++)b.addPlayerToTheTable(new Player(a[c].playerId,a[c].displayName));return b.potArray[b.getCurrentPotIndex()].addAllPlayersToThePot(b.playerList),b.deck=initializeTableDeck(),distributeCards(b),b}function d(a){return{table:c(a),delta:null}}function e(a,c,e,h){if(!a){var i=[],j={displayName:"Adit",playerId:"A",avatarImageUrl:null},k={displayName:"Ridhiman",playerId:"R",avatarImageUrl:null};i.push(j),i.push(k),a=d(i)}var l=!1,m=!1,n=a.table;if(b(n))throw new Error("Can only make a move if the game is not over! Number of required payers for the game not satisfied");var o=angular.copy(n);c=o.playerList[o.currentPlayerIndex];switch(console.log("Printing tableAfterMove"),console.log(o),0==o.openedCards.length&&(o.currentPlayerIndex==(o.dealerIndex+1)%o.playerList.length&&c.state==PlayerState.Init?(o.potArray[o.getCurrentPotIndex()].addAmountToPot(o.smallBlind),c.chipsInPocket-=o.smallBlind,c.currentBet=o.smallBlind,o.currentCallAmount=o.smallBlind,o.potArray[o.getCurrentPotIndex()].addContribution(c,o.smallBlind),o.potArray[o.getCurrentPotIndex()].currentPotBetAmount=o.smallBlind):o.currentPlayerIndex==(o.dealerIndex+2)%o.playerList.length&&c.state==PlayerState.Init&&(null==o?console.log("tableAfterMove is null!"):console.log("tableAfterMove is so not null!"),o.potArray[o.getCurrentPotIndex()].addAmountToPot(o.bigBlind),c.chipsInPocket-=o.bigBlind,c.currentBet=o.bigBlind,o.currentCallAmount=o.bigBlind,o.potArray[o.getCurrentPotIndex()].addContribution(c,o.bigBlind),o.potArray[o.getCurrentPotIndex()].currentPotBetAmount=o.bigBlind)),c.state){case PlayerState.Fold:for(var p=0,q=void 0,r=0;r<o.playerList.length;r++)o.playerList[r].state==PlayerState.Fold?p++:q=o.playerList[r];if(p==o.playerList.length-1){var s=o.getCumulativePotAmount();q.chipsInPocket+=s,o.removePlayersWithInsufficientChips(),o.resetHand(),m=!0,l=!0,0==o.playerList.length||1==o.playerList.length;var t,u=o.currentPlayerIndex,v={currentPlayer:c,amountAdded:e},w={delta:v,table:o};return t=null,{endMatchScores:t,turnIndexAfterMove:u,stateAfterMove:w}}for(var r=0;r<o.potArray.length;r++)o.potArray[r].removeIfPlayerPresent(c);break;case PlayerState.AllIn:if(0==c.chipsInPocket){var x,y=o.currentPlayerIndex,z={currentPlayer:c,amountAdded:e},A={delta:z,table:o};return x=null,{endMatchScores:x,turnIndexAfterMove:y,stateAfterMove:A}}var B=c.currentBet+c.chipsInPocket;if(B>=o.currentCallAmount){for(var C=c.chipsInPocket,r=0;r<o.potArray.length;r++){var D=o.potArray[r].checkContribution(c);if(D<o.potArray[r].currentPotBetAmount){var E=o.potArray[r].currentPotBetAmount-D;C-=E,o.potArray[r].addAmountToPot(E),o.potArray[r].addContribution(c,E)}}o.potArray[o.getCurrentPotIndex()].addAmountToPot(C),o.potArray[o.getCurrentPotIndex()].addContribution(c,C),c.chipsInPocket=0,c.currentBet=B,B>o.currentCallAmount&&(o.roundStartIndex=o.currentPlayerIndex),o.currentCallAmount=B,o.potArray[o.getCurrentPotIndex()].currentPotBetAmount+=C}else if(B<o.currentCallAmount){for(var F=0,G=0,H=void 0,r=0;r<o.potArray.length;r++){if(F+=o.potArray[r].currentPotBetAmount,B==F){o.potArray[r].addAmountToPot(c.chipsInPocket),o.potArray[r].addContribution(c,c.chipsInPocket),c.chipsInPocket=0,c.currentBet=B;for(var I=r+1;I<o.potArray.length;I++)o.potArray[I].removeIfPlayerPresent(c);H=1;break}if(F>B){H=2,G=r;break}}if(1==H)break;for(var C=c.chipsInPocket,r=0;G>r;r++){var D=o.potArray[r].checkContribution(c);if(D<o.potArray[r].currentPotBetAmount){var J=o.potArray[r].currentPotBetAmount-D;C-=J,o.potArray[r].addAmountToPot(J),o.potArray[r].addContribution(c,J)}}for(var K=new Pot,L=[],r=0;r<o.potArray[G].playersInvolved.length;r++)o.potArray[G].playersInvolved[r]!=c&&L.push(o.potArray[G].playersInvolved[r]);K.addAllPlayersToThePot(L),K.currentPotBetAmount=o.potArray[G].currentPotBetAmount-C;for(var M=o.potArray[G].playersInvolved,N=o.potArray[G].playersContributions,E=0,O=0,P=[],Q=[],r=0;r<M.length;r++)N[r]>C&&(E=N[r]-C,o.potArray[G].subtractContribution(M[r],E),O+=E,P.push(M[r]),Q.push(E));o.potArray[G].addAmountToPot(C),o.potArray[G].addContribution(c,C),o.potArray[G].currentPotBetAmount=C,o.potArray[G].subtractAmountFromThePot(O),K.addAmountToPot(O);for(var r=0;r<P.length;r++)K.addContribution(P[r],Q[r]);o.potArray.splice(G+1,0,K),c.chipsInPocket=0,c.currentBet=B}break;case PlayerState.Check:if(o.currentCallAmount>c.currentBet)throw new Error("Can't check. The player has not matched the current table bet amount");break;case PlayerState.Call:var R=o.currentCallAmount-c.currentBet;if(0==R)throw new Error("The player has already matched the current table bet amount");if(R>c.chipsInPocket)throw new Error("The player doesn't have enough chips to match the current table bet amount. He can go All In");for(var r=0;r<o.potArray.length;r++){var D=o.potArray[r].checkContribution(c);if(D<o.potArray[r].currentPotBetAmount){var E=o.potArray[r].currentPotBetAmount-D;o.potArray[r].addAmountToPot(E),o.potArray[r].addContribution(c,E)}}c.chipsInPocket-=R,c.currentBet=o.currentCallAmount;break;case PlayerState.Raise:var R=o.currentCallAmount-c.currentBet,S=e,T=R+S;if(T>c.chipsInPocket)throw new Error("The player doesn't have enough chips to raise the bet. Choose a smaller amount.");for(var C=T,r=0;r<o.potArray.length;r++){var D=o.potArray[r].checkContribution(c);if(D<o.potArray[r].currentPotBetAmount){var E=o.potArray[r].currentPotBetAmount-D;C-=E,o.potArray[r].addAmountToPot(E),o.potArray[r].addContribution(c,E)}}o.potArray[o.getCurrentPotIndex()].addAmountToPot(C),o.potArray[o.getCurrentPotIndex()].addContribution(c,C),c.chipsInPocket-=T,c.currentBet=c.currentBet+T,o.currentCallAmount=c.currentBet,o.roundStartIndex=o.currentPlayerIndex,o.potArray[o.getCurrentPotIndex()].currentPotBetAmount+=C}var U,V=b(o);(o.currentPlayerIndex+1)%o.playerList.length==o.roundStartIndex&&c.state!=PlayerState.Init&&(g(o),f(o),l=!0,5==o.openedCards.length&&(m=!0)),V?U=-1:(0!=o.openedCards.length||0!=m||c.state!=PlayerState.Init||o.currentPlayerIndex!=(o.dealerIndex+1)%o.playerList.length&&o.currentPlayerIndex!=(o.dealerIndex+2)%o.playerList.length?0==l&&o.incrementCurrentPlayerIndex():o.incrementCurrentAndRoundStartIndices(),U=o.currentPlayerIndex);var W,X={currentPlayer:c,amountAdded:e},Y={delta:X,table:o};return W=null,{endMatchScores:W,turnIndexAfterMove:U,stateAfterMove:Y}}function f(a){switch(a.openedCards.length){case 0:for(var b=0;3>b;b++)a.openedCards.push(a.closedCards.pop());a.verifyAndAdjustPots(),a.resetRound();break;case 3:a.openedCards.push(a.closedCards.pop()),a.resetRound();break;case 4:a.openedCards.push(a.closedCards.pop()),a.resetRound();break;case 5:a.winners=a.awardWinners(),a.removePlayersWithInsufficientChips(),a.resetHand(),0==a.playerList.length||1==a.playerList.length}}function g(a){for(var b=a.potArray.length-1;b<a.potArray.length;b++){var c=a.potArray[b],d=c.playersContributions[0],e=[];e.push(c.playersInvolved[0]);for(var f=0;f<c.playersInvolved.length;f++)c.playersInvolved[f].state==PlayerState.AllIn&&c.playersContributions[f]<c.currentPotBetAmount&&(c.playersContributions[f]<d?(d=c.playersContributions[f],e=[],e.push(c.playersInvolved[f])):c.playersContributions[f]==d&&e.push(c.playersInvolved[f]));if(d<c.currentPotBetAmount){for(var g=new Pot,h=[],f=0;f<c.playersInvolved.length;f++){for(var i=!1,j=0;j<e.length;j++)if(c.playersInvolved[f]==e[j]){i=!0;break}0==i&&h.push(c.playersInvolved[f])}var k=d;g.addAllPlayersToThePot(h),g.currentPotBetAmount=c.currentPotBetAmount-k;for(var l=c.playersInvolved,m=c.playersContributions,n=0,o=0,p=[],q=[],f=0;f<l.length;f++)m[f]>k&&(n=m[f]-k,c.subtractContribution(l[f],n),o+=n,p.push(l[f]),q.push(n));c.currentPotBetAmount=k,c.subtractAmountFromThePot(o),g.addAmountToPot(o);for(var f=0;f<p.length;f++)g.addContribution(p[f],q[f]);a.potArray.push(g)}}}function h(a){var b=a.turnIndexBeforeMove,c=a.stateBeforeMove,d=a.move,f=a.move.stateAfterMove.delta,g=f.currentPlayer,h=f.amountAdded,i=e(c,g,h,b);!angular.equals(d,i)}function i(a){return 0==a.getCumulativePotAmount()}function j(a){return a.getCumulativePotAmount()==a.smallBlind}function k(a){return!i(a)&&!j(a)}function l(a,b){return null==b?!1:i(a)||j(a)?!1:!(a.currentCallAmount>b.currentBet)}function m(a,b){if(null==b)return!1;var c=a.currentCallAmount-b.currentBet;return i(a)||j(a)?!1:0==c?!1:!(c>b.chipsInPocket)}function n(a,b,c){if(null==b)return!1;var d=a.currentCallAmount-b.currentBet,e=c,f=d+e;return i(a)||j(a)?!1:!(f>b.chipsInPocket)}function o(a,b){return null!=b}function p(a){var b,c=[8,9,5,6,1,2,3,10,4,7,0],d=10,e=[],f=a.replace(/A/g,"14").replace(/K/g,"13").replace(/Q/g,"12").replace(/J/g,"11").replace(/s|c|h|d/g,","),g=f.replace(/\s/g,"").slice(0,-1).split(",").map(Number).filter(Boolean),h=a.match(/s|c|h|d/g),i=[];for(b=0;b<h.length;b++)"s"===h[b]?i[b]=1:"c"===h[b]?i[b]=8:"h"===h[b]?i[b]=32:"d"===h[b]&&(i[b]=64);if(null!==g&&null!=i){if(g.length==i.length){var j=void 0,k={},l=0,m=void 0;for(b=0;b<g.length;b++)j=g[b]+h[b],k[j]=1;for(m in k)k.hasOwnProperty(m)&&l++;if(g.length>=5&&g.length==i.length&&g.length==l){var n=r(5,g.length),o=0,p=10;for(b=0;b<n.length;b++){var t=[g[n[b][0]],g[n[b][1]],g[n[b][2]],g[n[b][3]],g[n[b][4]]],u=[i[n[b][0]],i[n[b][1]],i[n[b][2]],i[n[b][3]],i[n[b][4]]];if(d=s(t,u),c[d]>o)o=c[d],p=d,e=n[b].slice();else if(c[d]==o){var v=q(t),w=q([g[e[0]],g[e[1]],g[e[2]],g[e[3]],g[e[4]]]);v>w&&(e=n[b].slice())}}d=p}}var x=new winningScoreAndCards;return x.index=d,x.wci=e,x}}function q(a){var b,c=a.slice(),d=[];for(b=0;5>b;b++)d[c[b]]=d[c[b]]>=1?d[c[b]]+1:1;return c.sort(function(a,b){return d[a]<d[b]?1:d[a]>d[b]?-1:b-a}),c[0]<<16|c[1]<<12|c[2]<<8|c[3]<<4|c[4]}function r(a,b){function c(a,b,c){var d;if(0===a.length){for(d=0;b>d;++d)a[d]=d;return!0}for(d=b-1,++a[d];d>0&&a[d]>=c-b+1+d;)--d,++a[d];if(a[0]>c-b)return!1;for(d+=1;b>d;++d)a[d]=a[d-1]+1;return!0}for(var d=[],e=[];c(e,a,b);)d.push(e.slice());return d}function s(a,b){var c,d,e,f;for(d=-1,c=e=0;5>d;d++,e=Math.pow(2,4*a[d]))c+=e*((c/e&15)+1);return 5!=(c%=15)?c-1:(f=1<<a[0]|1<<a[1]|1<<a[2]|1<<a[3]|1<<a[4],c-=f/(f&-f)==31||16444==f?3:1,b[0]==(b[0]|b[1]|b[2]|b[3]|b[4])?c-(31744==f?-5:1):c)}function t(a,b,c,d){for(var e=[],f=[],g=0;g<b.length;g++){e[g]=[];for(var h=0;h<c[g].length;h++)c[g][h]<2?e[g].push(b[g].cards[c[g][h]]):e[g].push(a[c[g][h]-2])}switch(d){case"4 of a Kind":return u(a,b,c,d,e,f);case"3 of a Kind":return v(a,b,c,d,e,f);case"1 Pair":return w(a,b,c,d,e,f);case"Straight Flush":return x(a,b,c,d,e,f);case"Straight":return x(a,b,c,d,e,f);case"Flush":return y(a,b,c,d,e,f);case"High Card":return y(a,b,c,d,e,f);case"Full House":return v(a,b,c,d,e,f);case"Royal Flush":return b;case"2 Pair":return z(a,b,c,d,e,f);case"-Invalid-":return}}function u(a,b,c,d,e,f){for(var g=0,h=0,i=0;i<b.length;i++){for(var j=1,k=0,l="",m=0;m<e[i].length-1;m++){for(var n=m+1;n<e[i].length;n++)e[i][m].cardNumber==e[i][n].cardNumber&&j++;if(l=e[i][m].cardNumber,4==j)break;j=1}j=0;for(var m=0;m<e[i].length;m++){j=1;for(var n=0;n<e[i].length;n++)e[i][m].cardNumber==e[i][n].cardNumber&&m!=n&&j++;1==j&&A(e[i][m].cardNumber)>k&&(k=A(e[i][m].cardNumber))}var o=A(l);o>g?(g=o,h=k,f=[],f.push(b[i])):o==g&&k>h?(h=k,f=[],f.push(b[i])):o==g&&k==h&&f.push(b[i])}return f}function v(a,b,c,d,e,f){for(var g=0,h=0,i=0,j=0;j<b.length;j++){for(var k=1,l=0,m=0,n="",o=0;o<e[j].length-1;o++){for(var p=o+1;p<e[j].length;p++)e[j][o].cardNumber==e[j][p].cardNumber&&k++;if(n=e[j][o].cardNumber,3==k)break;k=1}k=0;for(var o=0;o<e[j].length;o++){k=1;for(var p=0;p<e[j].length;p++)e[j][o].cardNumber==e[j][p].cardNumber&&o!=p&&k++;3!=k&&A(e[j][o].cardNumber)>l?(m=l,l=A(e[j][o].cardNumber)):3!=k&&A(e[j][o].cardNumber)>l&&(m=A(e[j][o].cardNumber))}var q=A(n);q>g?(g=q,i=l,m=l,f=[],f.push(b[j])):q==g&&l>i?(i=l,h=m,f=[],f.push(b[j])):q==g&&l==i&&m>h?(h=m,f=[],f.push(b[j])):q==g&&l==i&&m==h&&f.push(b[j])}return f}function w(a,b,c,d,e,f){for(var g=0,h=0,i=0,j=0,k=0;k<b.length;k++){for(var l=1,m="",n=0;n<e[k].length-1;n++){for(var o=n+1;o<e[k].length;o++)e[k][n].cardNumber==e[k][o].cardNumber&&l++;if(m=e[k][n].cardNumber,2==l)break;l=1}for(var p=0,q=0,r=0,s=A(m),n=0;n<e[k].length;n++){var t=A(e[k][n].cardNumber);t!=s&&(t>p?(r=q,q=p,p=t):t>q?(r=q,q=t):t>r&&(r=t))}s>g?(g=s,h=p,i=q,j=r,f=[],f.push(b[k])):s==g&&p>h?(h=p,i=q,j=r,f=[],f.push(b[k])):s==g&&p==h&&q>i?(i=q,j=r,f=[],f.push(b[k])):s==g&&p==h&&q==i&&r>j?(j=r,f=[],f.push(b[k])):s==g&&p==h&&q==i&&r==j&&f.push(b[k])}return f}function x(a,b,c,d,e,f){for(var g=0,h=0;h<b.length;h++){for(var i=0,j=0;j<e[h].length;j++){var k=A(e[h][j].cardNumber);k>i&&(i=k)}i>g?(g=i,f=[],f.push(b[h])):i==g&&f.push(b[h])}return f}function y(a,b,c,d,e,f){for(var g=[],h=0;h<e.length;h++)e[h].sort(B);for(var h=0;5>h;h++){for(var i=0,j=0;j<b.length;j++)A(e[j][h].cardNumber)>i?(i=A(e[j][h].cardNumber),f=[],f.push(b[j]),g=[],g.push(e[j])):A(e[j][h].cardNumber)==i&&(f.push(b[j]),g.push(e[j]));if(1==f.length||4==h)return f;b=f,e=g,f=[]}return f}function z(a,b,c,d,e,f){for(var g=0,h=0,i=0,j=0;j<b.length;j++){for(var k=1,l=0,m=0,n=0,o=0;o<e[j].length-1;o++){for(var p=o+1;p<e[j].length;p++)e[j][o].cardNumber==e[j][p].cardNumber&&k++;if(2==k){var q=A(e[j][o].cardNumber);q>l?(m=l,l=q):q>m&&(m=q)}else k=1}k=1;for(var o=0;o<e[j].length;o++){k=1;for(var p=0;p<e[j].length;p++)e[j][o].cardNumber==e[j][p].cardNumber&&o!=p&&k++;if(1==k){n=A(e[j][o].cardNumber);break}}l>g?(g=l,h=m,i=n,f=[],f.push(b[j])):l==g&&m>h?(h=m,i=n,f=[],f.push(b[j])):l==g&&m==h&&n>i?(i=n,f=[],f.push(b[j])):l==g&&m==h&&n==i&&f.push(b[j])}return f}function A(a){switch(a){case"J":return 11;case"Q":return 12;case"K":return 13;case"A":return 14;default:return Number(a)}}function B(a,b){return A(a.cardNumber)>A(b.cardNumber)?-1:A(a.cardNumber)<A(b.cardNumber)?1:0}function C(){var b=a.createMove(null,null,0,0);b.stateAfterMove.table.playerList[0].chipsInPocket=500,b.stateAfterMove.table.playerList[1].chipsInPocket=290,b.stateAfterMove.table.playerList[2].chipsInPocket=500,b.stateAfterMove.table.playerList[3].chipsInPocket=300,b.stateAfterMove.table.playerList[4].chipsInPocket=500,b=a.createMove(b.stateAfterMove,null,0,b.turnIndexAfterMove),b.stateAfterMove.table.playerList[3].state=PlayerState.AllIn,b=a.createMove(b.stateAfterMove,null,0,b.turnIndexAfterMove),b.stateAfterMove.table.playerList[4].state=PlayerState.Call,b=a.createMove(b.stateAfterMove,null,0,b.turnIndexAfterMove),b.stateAfterMove.table.playerList[0].state=PlayerState.Call,b=a.createMove(b.stateAfterMove,null,0,b.turnIndexAfterMove),b.stateAfterMove.table.playerList[1].state=PlayerState.AllIn,b=a.createMove(b.stateAfterMove,null,0,b.turnIndexAfterMove),b.stateAfterMove.table.playerList[2].state=PlayerState.Call,b=a.createMove(b.stateAfterMove,null,0,b.turnIndexAfterMove),b.stateAfterMove.table.playerList[2].state=PlayerState.Check,b=a.createMove(b.stateAfterMove,null,0,b.turnIndexAfterMove),b.stateAfterMove.table.playerList[4].state=PlayerState.Fold,b=a.createMove(b.stateAfterMove,null,0,b.turnIndexAfterMove),b.stateAfterMove.table.playerList[0].state=PlayerState.Check,b=a.createMove(b.stateAfterMove,null,0,b.turnIndexAfterMove),b.stateAfterMove.table.playerList[2].state=PlayerState.Check,b=a.createMove(b.stateAfterMove,null,0,b.turnIndexAfterMove),b.stateAfterMove.table.playerList[0].state=PlayerState.Check,b=a.createMove(b.stateAfterMove,null,0,b.turnIndexAfterMove),b.stateAfterMove.table.playerList[2].state=PlayerState.Check,b=a.createMove(b.stateAfterMove,null,0,b.turnIndexAfterMove),b.stateAfterMove.table.playerList[0].state=PlayerState.Check,b=a.createMove(b.stateAfterMove,null,0,b.turnIndexAfterMove)}a.getInitialState=d,a.createMove=e,a.roundOver=f,a.adjustPots=g,a.checkMoveOk=h,a.canSmallBlindOrNot=i,a.canBigBlindOrNot=j,a.canFoldOrNot=k,a.canCheckOrNot=l,a.canCallOrNot=m,a.canRaiseOrNot=n,a.canAllInOrNot=o,a.rankHand=p,a.getPokerScore=q,a.getCombinations=r,a.resolveEqualHandsConflict=t,a.resolve_4_OfAKind=u,a.resolve_3_OfAKind=v,a.resolve_2_OfAKind=w,a.findHighestCard=x,a.resolveHighestCard=y,a.resolve2Pairs=z,a.getCardIntegerValue=A,a.sortNumber=B,a.forSimpleTestHtml=C}(gameLogic||(gameLogic={}));var game;!function(a){function b(){translate.setTranslations(c()),translate.setLanguage("en"),log.log("Translation of 'RULES_OF_TICTACTOE' is "+translate("RULES_OF_TICTACTOE")),resizeGameAreaService.setWidthToHeight(1),moveService.setGame({minNumberOfPlayers:2,maxNumberOfPlayers:2,checkMoveOk:gameLogic.checkMoveOk,updateUI:f}),document.addEventListener("animationend",d,!1),document.addEventListener("webkitAnimationEnd",d,!1),document.addEventListener("oanimationend",d,!1),setTimeout(d,1e3);var a=window;a.HTMLInspector&&setInterval(function(){a.HTMLInspector.inspect({excludeRules:["unused-classes","script-placement"]})},3e3)}function c(){return{RULES_OF_TICTACTOE:{en:"Rules of Poker",iw:"חוקי המשחק"},RULES_SLIDE1:{en:"You and your opponent take turns to mark the grid in an empty spot. The first mark is X, then O, then X, then O, etc.",iw:"אתה והיריב מסמנים איקס או עיגול כל תור"},RULES_SLIDE2:{en:"The first to mark a whole row, column or diagonal wins.",iw:"הראשון שמסמן שורה, עמודה או אלכסון מנצח"},CLOSE:{en:"Close",iw:"סגור"}}}function d(){a.animationEnded||$rootScope.$apply(function(){log.info("Animation ended"),a.animationEnded=!0,e()})}function e(){!a.isComputerTurn}function f(b){log.info("Game got updateUI:",b),a.animationEnded=!1,a.move=b.move;var c=new Player(b.move.stateAfterMove.delta.currentPlayer.id,b.move.stateAfterMove.delta.currentPlayer.name);c.state=b.move.stateAfterMove.delta.currentPlayer.state,c.chipsInPocket=b.move.stateAfterMove.delta.currentPlayer.chipsInPocket,c.currentBet=b.move.stateAfterMove.delta.currentPlayer.currentBet,c.cards=b.move.stateAfterMove.delta.currentPlayer.cards;var d=new TableSetup(b.playersInfo.length);d.playerList=b.move.stateAfterMove.table.playerList,d.deck=b.move.stateAfterMove.table.deck,d.openedCards=b.move.stateAfterMove.table.openedCards,d.closedCards=b.move.stateAfterMove.table.closedCards,d.dealerIndex=b.move.stateAfterMove.table.dealerIndex,d.currentPlayerIndex=b.move.stateAfterMove.table.currentPlayerIndex,d.potArray=b.move.stateAfterMove.table.potArray,d.smallBlind=b.move.stateAfterMove.table.smallBlind,d.bigBlind=b.move.stateAfterMove.table.bigBlind,d.roundStartIndex=b.move.stateAfterMove.table.roundStartIndex,d.currentCallAmount=b.move.stateAfterMove.table.currentCallAmount,d.playerIndicesRemovedInThisHand=b.move.stateAfterMove.table.playerIndicesRemovedInThisHand,d.winners=b.move.stateAfterMove.table.winners,a.move.stateAfterMove.delta.currentPlayer=c,a.move.stateAfterMove.table=d,a.state=a.move.stateAfterMove,a.state||(console.log("getInitialState() call. Should happen twice including the fake!"),a.state=gameLogic.getInitialState(b.playersInfo)),a.canMakeMove=a.move.turnIndexAfterMove>=0&&b.yourPlayerIndex===a.move.turnIndexAfterMove,console.log("canMakeMove: "+a.canMakeMove+" params.yourPlayerIndex: "+b.yourPlayerIndex+"move.turnIndexAfterMove: "+a.move.turnIndexAfterMove+" \nSTATE:"),console.log(a.state),b.yourPlayerIndex>=0&&3!==a.state.table.playerList[b.yourPlayerIndex].state&&(a.temp_yourPlayerIndex=b.yourPlayerIndex,p=a.state.table.playerList[b.yourPlayerIndex].cards[0],q=a.state.table.playerList[b.yourPlayerIndex].cards[1],a.class_yourPlayerCards_card1=k(p),a.class_yourPlayerCards_card2=k(q)),a.isComputerTurn=a.canMakeMove&&""===b.playersInfo[b.yourPlayerIndex].playerId,a.isComputerTurn&&(a.canMakeMove=!1,a.state.delta||e()),console.log("state at end of updateUI",a.state)}function g(b,c){if(log.info("Clicked on button:",b," amountRaised: ",c),"?throwException"===window.location.search)throw new Error("Throwing the error because URL has '?throwException'");if(!a.canMakeMove)return void console.log(" cannot make move, "+a.move.turnIndexAfterMove+" should play");try{console.log("cellClicked STATE BEFORE MAKE MOVE: ",a.state),a.oldOpenCardsSize=a.state.table.openedCards.length,a.state.table.playerList[a.temp_yourPlayerIndex].state=h(b);var d=gameLogic.createMove(a.state,null,c,a.move.turnIndexAfterMove);console.log("cellClicked STATE AFTER MAKE MOVE: "),console.log(d),a.canMakeMove=!1,moveService.makeMove(d)}catch(e){log.info("Illegal Move",b),console.log(e)}}function h(a){switch(a){case"Raise":return PlayerState.Raise;case"Fold":return PlayerState.Fold;case"Call":return PlayerState.Call;case"AllIn":return PlayerState.AllIn;case"Check":return PlayerState.Check;case"Small":return PlayerState.Init;case"Big":return PlayerState.Init;default:throw new Error("getPlayerStateBasedOnAction: Illegal PlayertState")}}function i(b){var c=PlayerState[a.state.table.playerList[b].state];return c}function j(){var b=document.getElementById("raiseAmount").value;""===b&&(b="0"),a.cellClicked("Raise",+b)}function k(a){var b="card";return b+=" "+l(a)+" "+m(a)}function l(a){switch(a.cardType){case 0:return"clubs";case 1:return"diamonds";case 2:return"hearts";case 3:return"spades";default:return" "}}function m(a){switch(a.cardNumber){case"K":return"rank13";case"Q":return"rank12";case"J":return"rank11";case"10":return"rank10";case"9":return"rank9";case"8":return"rank8";case"7":return"rank7";case"6":return"rank6";case"5":return"rank5";case"4":return"rank4";case"3":return"rank3";case"2":return"rank2";case"A":return"rank1";default:return" "}}function n(a){return!0}function o(b){return b.target===b.currentTarget&&(b.preventDefault(),b.stopPropagation(),a.isHelpModalShown=!1),!0}a.animationEnded=!1,a.canMakeMove=!1,a.isComputerTurn=!1,a.move=null,a.state=null,a.isHelpModalShown=!1,a.oldOpenCardsSize=0;var p,q;a.init=b,a.cellClicked=g,a.getPlayerStateBasedOnAction=h,a.getPlayerStateByIndex=i,a.raised=j,a.getCardClass=k,a.getCardSuite=l,a.getCardRank=m,a.shouldShowButton=n,a.clickedOnModal=o}(game||(game={})),angular.module("myApp",["ngTouch","ui.bootstrap","gameServices"]).run(function(){$rootScope.game=game,game.init()});
//# sourceMappingURL=everything.min.js.map